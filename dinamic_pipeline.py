# -*- coding: utf-8 -*-
"""Dinamic pipeline.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XRMwnh6O9nxNWo3o17b06SrQwfILeGLr

Mario Castro <mariocastro.pva@gmail.com>

30-12-2021
"""
from pprint import pprint

from functional_pipeline import pipeline, String, join, lens

from json_reader import get_data

from filters_lib import CampaignCriteria


def main(function_list, data, parameter_list):
    # instancia de la clase contenedora de funciones
    function_selector = CampaignCriteria()

    # se genera dinamicamente la lista de funciones a ejecutar,
    # buscandolas en la clase CampaignCriteria segun la lista de funciones
    # suministrada
    pipe = [
        function_selector.criteria_selector(type, **parameter_list)
        for type in function_list
    ]

    # se ejecuta el pipeline
    result = list(pipeline(data, pipe))

    pprint(result)
    print("\nNumber of resulting items: ", len(result))


if __name__ == "__main__":
    # lista de funciones a ejecutar
    function_list = [
        "filter_name",
        "filter_room_type",
        "filter_by_tenant_id",
        "books",
    ]
    # function_list = ["books"]
    parameter_list = {
        "letter": "E",
        "room_id": 108,
        "tenant_id": "1",
        "reseller": "NAVICU",
    }

    # arreglo de data a procesar
    data = get_data()

    main(function_list, data, parameter_list)
