# -*- coding: utf-8 -*-
"""Dinamic pipeline.ipynb

Automatically generated by Colaboratory.

Based on file located at
    https://colab.research.google.com/drive/1XRMwnh6O9nxNWo3o17b06SrQwfILeGLr

Mario Castro <mariocastro.pva@gmail.com>

30-12-2021
"""
from pprint import pprint

from collections import ChainMap

from functional_pipeline import pipeline

from libs.file_manager import get_criteria, get_data_file, put_data

from libs.filters_lib import CampaignCriteria

from repository.queries import CriteriaRepo


async def get_db_data(customer_id_list):
    customers = [
        customer
        async for customer in CriteriaRepo().get_customer_from_id(customer_id_list)
    ]
    return customers


def main(function_list, data, param_list):
    # instancia de la clase contenedora de funciones
    function_selector = CampaignCriteria()

    # se genera dinamicamente la lista de funciones a ejecutar,
    # buscandolas en la clase CampaignCriteria segun la lista de funciones
    # suministrada
    pipe = [
        function_selector.criteria_selector(type, **param_list)
        for type in function_list
    ]

    # se ejecuta el pipeline
    result = list(pipeline(data, pipe))

    put_data(result)

    # pprint(result)

    print("\nNumber of resulting customers: ", len(result))


if __name__ == "__main__":

    criteria_function_list_clean = []
    param_list = []
    filters_input_raw = get_criteria()
    filters = []

    # se construye la lista de funciones o filtros a ejecutar
    # y el objeto con los parametros a aplicar en cada uno

    for item in filters_input_raw.values():
        filters.append(item)

    flatten_filters = ChainMap(*filters)

    for k, v in flatten_filters.items():
        criteria_function_list_clean.append(k)

    param_list = dict(flatten_filters)

    # arreglo de data a procesar

    customer_id_list = get_data_file()

    customers = [
        customer for customer in CriteriaRepo().get_customer_from_id(customer_id_list)
    ]

    main(criteria_function_list_clean, customers, param_list)
